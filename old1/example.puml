@startuml

' 大きく分けてシステムの構造を表す構造図（structure diagram）と、
' 動作や変化を表す振る舞い図（behavior diagram）の2種類に分類される。
'クラス図

class A {
    - attribute1 : int
    - attribute2 : String
    + method1()
    + method2(arg : int)
}

class B extends A {
    - attribute3 : double
    + method3()
}
class Person {
    - name : String
    - age : int
    + getName() : String
    + getAge() : int
}

class Student extends Person {
    - studentId : int
    + getStudentId() : int
}

class Teacher extends Person {
    - teacherId : int
    + getTeacherId() : int
}

Person <|-- Student
Person <|-- Teacher
@enduml

@startuml
'オブジェクト図 (Object Diagram)

object student1 {
    name = "John Doe"
    age = 20
    studentId = 12345
}

object teacher1 {
    name = "Jane Smith"
    age = 35
    teacherId = 6789
}
@enduml

@startuml
'パッケージ図（package diagram）

package "com.example.account" {
    class Account
    class AccountService
}

package "com.example.user" {
    class User
    class UserService
}

package "com.example.payment" {
    class Payment
    class PaymentService
}

Account <|-- AccountService
User <|-- UserService
Payment <|-- PaymentService

User -- Account : owns
Account -- Payment : processes
@enduml

@startuml
'複合構造図（composite structure diagram）

class Car {
    - engine : Engine
    - wheel : Wheel[4]
}

class Engine {
    - horsepower : int
}

class Wheel {
    - radius : float
}

Car *-- Engine
Car *-- Wheel
@enduml
